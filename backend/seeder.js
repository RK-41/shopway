/*
  31.10.

  Script to Seed the Data (User Data and Product Data)

*/

import mongoose from 'mongoose';
import dotenv from 'dotenv';
import colors from 'colors';
import users from './data/users.js';
import products from './data/products.js';
import User from './models/userModel.js';
import Product from './models/productModel.js';
import Order from './models/orderModel.js';
import connectDB from './config/db.js';

// Initializing 'dotenv' to use the Env. Variables
dotenv.config();

// Connecting to the DB
connectDB();

// Importing Data
const importData = async () => {
	try {
		// Deleting Previous Data
		await Order.deleteMany();
		await Product.deleteMany();
		await User.deleteMany();

		// Inserting Users' Data using the 'User' Model
		const createdUsers = await User.insertMany(users);

		// Getting Admin ID which is Generated by MongoDB
		const adminUser = createdUsers[0]._id;

		// Creating an Array of Sample Products Objects
		const sampleProducts = products.map((product) => {
			return { ...product, user: adminUser };
		});

		// Inserting Products' Data using the 'Product' Model
		await Product.insertMany(sampleProducts);

		console.log('Data Imported!'.green.inverse);
		process.exit();
	} catch (error) {
		console.log(`${error}.red.inverse`);
		process.exit(1);
	}
};

// Destroying Data
const destroyData = async () => {
	try {
		// Deleting Data
		await Order.deleteMany();
		await Product.deleteMany();
		await User.deleteMany();

		console.log('Data Destroyed!'.red.inverse);
		process.exit();
	} catch (error) {
		console.log(`${error}`.red.inverse);
		process.exit(1);
	}
};

// Implementing Conditional to Run either 'importData()' or 'destroyData()'
if (process.argv[2] === '-d') {
	destroyData();
} else {
	importData();
}
